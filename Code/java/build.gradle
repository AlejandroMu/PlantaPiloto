
subprojects{
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'jacoco'
   
    jacoco {
        toolVersion = '0.8.7'
    }

    test{
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        reports {
            xml.enabled true // Habilitar generación de informe XML de cobertura
            html.enabled true // Deshabilitar generación de informe HTML (opcional)
            csv.enabled false // Deshabilitar generación de informe CSV (opcional)
            xml.destination file("$buildDir/reports/jacoco/jacoco.xml")
        }
        // // Ruta y nombre del archivo XML de cobertura
    }
    java {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }


    repositories {
        mavenCentral()
        mavenLocal()

    }

    dependencies{
        implementation 'javax.persistence:javax.persistence-api:2.2'
        implementation 'com.google.code.gson:gson:2.10'
        implementation 'com.zeroc:ice:3.7.9'
        implementation 'icesi.plantapiloto:common:1.0'

    }

    task cleanBin(type: Delete){
        delete "${projectDir}/bin"
    }
    clean.finalizedBy(cleanBin)

    task cleanZip(type: Delete){
        delete "$rootDir/distributable/${project.name}.zip"
    }
    task copyToLib(type: Copy) {
        into "${buildDir}/libs"
        from configurations.runtimeClasspath
        dependsOn build

    }
    task comprimir(type: Zip){
        from "$buildDir/libs/"
        from "$rootDir/scripts/run.sh"
        archiveName "${project.name}.zip"
        destinationDir(file("$rootDir/distributable"))
        dependsOn copyToLib
        dependsOn cleanZip
    }

}